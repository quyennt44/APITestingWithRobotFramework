<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 16:28:11.107" generator="Robot 3.1.2 (Python 2.7.15 on win32)">
<suite source="D:\workspace\RobotFrameworkSellCenterAPITest" id="s1" name="RobotFrameworkSellCenterAPITest">
<suite source="D:\workspace\RobotFrameworkSellCenterAPITest\Test Specification" id="s1-s1" name="Test Specification">
<suite source="D:\workspace\RobotFrameworkSellCenterAPITest\Test Specification\Products" id="s1-s1-s1" name="Products">
<suite source="D:\workspace\RobotFrameworkSellCenterAPITest\Test Specification\Products\Spec_AddProduct.robot" id="s1-s1-s1-s1" name="Spec AddProduct">
<kw type="setup" name="Suite Setup" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${TEST_CASE_FOLDER}</arg>
</arguments>
<kw name="Create Jira Session" library="Utils">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>alias=Get_Jira_Request</arg>
<arg>url=${JIRA_URL}</arg>
<arg>auth=${JIRA_AUTH}</arg>
<arg>verify=True</arg>
</arguments>
<msg timestamp="20190820 16:28:11.431" level="INFO">Creating Session using : alias=Get_Jira_Request, url=https://jira.teko.vn, headers={},                     cookies=None, auth=&lt;requests.auth.HTTPBasicAuth object at 0x00000000042F5550&gt;, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" endtime="20190820 16:28:11.431" starttime="20190820 16:28:11.430"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:11.432" starttime="20190820 16:28:11.430"></status>
</kw>
<kw name="Check And Create Folder" library="Utils">
<arguments>
<arg>${folderPath}</arg>
<arg>${folderType}</arg>
</arguments>
<kw name="Check If Folder Existed" library="Utils">
<arguments>
<arg>${folderPath}</arg>
</arguments>
<assign>
<var>${folderFound}</var>
</assign>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_SEARCH_TESTCASE}?query=projectKey = "${JIRA_PROJECT_KEY}" AND folder = "${folder}"</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:11.730" level="INFO">Get Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/search?query=projectKey = "SC" AND folder = "/API Test/Add Sale Chanel", headers=None json=None</msg>
<msg timestamp="20190820 16:28:11.731" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:11.732" starttime="20190820 16:28:11.434"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusCode}</var>
</assign>
<msg timestamp="20190820 16:28:11.736" level="INFO">${statusCode} = 200</msg>
<status status="PASS" endtime="20190820 16:28:11.737" starttime="20190820 16:28:11.733"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${statusCode} == ${GET_SUCCESS_CODE}</arg>
<arg>${True}</arg>
<arg>${False}</arg>
</arguments>
<assign>
<var>${existed}</var>
</assign>
<msg timestamp="20190820 16:28:11.740" level="INFO">${existed} = True</msg>
<status status="PASS" endtime="20190820 16:28:11.741" starttime="20190820 16:28:11.738"></status>
</kw>
<msg timestamp="20190820 16:28:11.742" level="INFO">${folderFound} = True</msg>
<status status="PASS" endtime="20190820 16:28:11.744" starttime="20190820 16:28:11.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${folderFound}!= ${True}</arg>
<arg>Create Folder</arg>
<arg>${folderPath}</arg>
<arg>${folderType}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:11.747" starttime="20190820 16:28:11.745"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:11.749" starttime="20190820 16:28:11.432"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:11.750" starttime="20190820 16:28:11.429"></status>
</kw>
<test id="s1-s1-s1-s1-t1" name="Delete Old Test Case">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:11.756" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:11.757" starttime="20190820 16:28:11.755"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:11.761" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:11.762" starttime="20190820 16:28:11.758"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:11.763" starttime="20190820 16:28:11.753"></status>
</kw>
<kw name="Check And Delete All Test Cases From Folder" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
</arguments>
<kw name="Get All Test Cases From Folder As List" library="Utils">
<arguments>
<arg>${folder}</arg>
<arg>${TEST_CASE_KEY}</arg>
</arguments>
<assign>
<var>${testCaseKeyList}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${testCaseItemDictionary}</var>
</assign>
<msg timestamp="20190820 16:28:11.770" level="INFO">${testCaseItemDictionary} = </msg>
<status status="PASS" endtime="20190820 16:28:11.770" starttime="20190820 16:28:11.768"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_SEARCH_TESTCASE}?query=projectKey = "${JIRA_PROJECT_KEY}" AND folder = "${folder}"</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.047" level="INFO">Get Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/search?query=projectKey = "SC" AND folder = "/API Test/Add Sale Chanel", headers=None json=None</msg>
<msg timestamp="20190820 16:28:12.048" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.049" starttime="20190820 16:28:11.771"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${GET_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.053" starttime="20190820 16:28:12.050"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.json()}</arg>
</arguments>
<assign>
<var>${returnList}</var>
</assign>
<msg timestamp="20190820 16:28:12.062" level="INFO">${returnList} = [{u'key': u'SC-T11224', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id':...</msg>
<status status="PASS" endtime="20190820 16:28:12.062" starttime="20190820 16:28:12.055"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${testCaseList}</var>
</assign>
<msg timestamp="20190820 16:28:12.065" level="INFO">${testCaseList} = []</msg>
<status status="PASS" endtime="20190820 16:28:12.066" starttime="20190820 16:28:12.064"></status>
</kw>
<kw type="for" name="${item} IN [ @{returnList} ]">
<kw type="foritem" name="${item} = {u'key': u'SC-T11224', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.071" level="INFO">${addedItem} = SC-T11224</msg>
<status status="PASS" endtime="20190820 16:28:12.071" starttime="20190820 16:28:12.069"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.073" starttime="20190820 16:28:12.072"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.073" starttime="20190820 16:28:12.068"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11225', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.075" level="INFO">${addedItem} = SC-T11225</msg>
<status status="PASS" endtime="20190820 16:28:12.075" starttime="20190820 16:28:12.074"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.079" starttime="20190820 16:28:12.078"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.079" starttime="20190820 16:28:12.074"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11226', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.081" level="INFO">${addedItem} = SC-T11226</msg>
<status status="PASS" endtime="20190820 16:28:12.082" starttime="20190820 16:28:12.080"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.083" starttime="20190820 16:28:12.082"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.083" starttime="20190820 16:28:12.080"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11227', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.086" level="INFO">${addedItem} = SC-T11227</msg>
<status status="PASS" endtime="20190820 16:28:12.086" starttime="20190820 16:28:12.085"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.088" starttime="20190820 16:28:12.087"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.088" starttime="20190820 16:28:12.084"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11228', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.091" level="INFO">${addedItem} = SC-T11228</msg>
<status status="PASS" endtime="20190820 16:28:12.091" starttime="20190820 16:28:12.090"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.093" starttime="20190820 16:28:12.092"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.093" starttime="20190820 16:28:12.089"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11229', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.095" level="INFO">${addedItem} = SC-T11229</msg>
<status status="PASS" endtime="20190820 16:28:12.095" starttime="20190820 16:28:12.094"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.097" starttime="20190820 16:28:12.096"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.097" starttime="20190820 16:28:12.094"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11230', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.099" level="INFO">${addedItem} = SC-T11230</msg>
<status status="PASS" endtime="20190820 16:28:12.100" starttime="20190820 16:28:12.098"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.101" starttime="20190820 16:28:12.100"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.101" starttime="20190820 16:28:12.098"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11231', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:56.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.102" level="INFO">${addedItem} = SC-T11231</msg>
<status status="PASS" endtime="20190820 16:28:12.102" starttime="20190820 16:28:12.102"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.103" starttime="20190820 16:28:12.103"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.104" starttime="20190820 16:28:12.101"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11232', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.105" level="INFO">${addedItem} = SC-T11232</msg>
<status status="PASS" endtime="20190820 16:28:12.105" starttime="20190820 16:28:12.104"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.106" starttime="20190820 16:28:12.105"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.106" starttime="20190820 16:28:12.104"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11233', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.107" level="INFO">${addedItem} = SC-T11233</msg>
<status status="PASS" endtime="20190820 16:28:12.107" starttime="20190820 16:28:12.106"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.108" starttime="20190820 16:28:12.107"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.108" starttime="20190820 16:28:12.106"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11234', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.109" level="INFO">${addedItem} = SC-T11234</msg>
<status status="PASS" endtime="20190820 16:28:12.109" starttime="20190820 16:28:12.108"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.110" starttime="20190820 16:28:12.109"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.110" starttime="20190820 16:28:12.108"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11235', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.111" level="INFO">${addedItem} = SC-T11235</msg>
<status status="PASS" endtime="20190820 16:28:12.111" starttime="20190820 16:28:12.111"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.112" starttime="20190820 16:28:12.111"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.112" starttime="20190820 16:28:12.110"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11236', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.113" level="INFO">${addedItem} = SC-T11236</msg>
<status status="PASS" endtime="20190820 16:28:12.113" starttime="20190820 16:28:12.113"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.114" starttime="20190820 16:28:12.114"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.114" starttime="20190820 16:28:12.112"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11237', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.115" level="INFO">${addedItem} = SC-T11237</msg>
<status status="PASS" endtime="20190820 16:28:12.115" starttime="20190820 16:28:12.115"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.116" starttime="20190820 16:28:12.116"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.116" starttime="20190820 16:28:12.115"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11238', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.117" level="INFO">${addedItem} = SC-T11238</msg>
<status status="PASS" endtime="20190820 16:28:12.118" starttime="20190820 16:28:12.117"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.118" starttime="20190820 16:28:12.118"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.119" starttime="20190820 16:28:12.117"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11239', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.120" level="INFO">${addedItem} = SC-T11239</msg>
<status status="PASS" endtime="20190820 16:28:12.120" starttime="20190820 16:28:12.119"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.121" starttime="20190820 16:28:12.120"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.121" starttime="20190820 16:28:12.119"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11240', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:57.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.122" level="INFO">${addedItem} = SC-T11240</msg>
<status status="PASS" endtime="20190820 16:28:12.122" starttime="20190820 16:28:12.122"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.123" starttime="20190820 16:28:12.123"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.123" starttime="20190820 16:28:12.121"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11241', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.124" level="INFO">${addedItem} = SC-T11241</msg>
<status status="PASS" endtime="20190820 16:28:12.124" starttime="20190820 16:28:12.124"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.125" starttime="20190820 16:28:12.125"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.126" starttime="20190820 16:28:12.124"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11242', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.127" level="INFO">${addedItem} = SC-T11242</msg>
<status status="PASS" endtime="20190820 16:28:12.127" starttime="20190820 16:28:12.126"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.128" starttime="20190820 16:28:12.127"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.128" starttime="20190820 16:28:12.126"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11243', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.129" level="INFO">${addedItem} = SC-T11243</msg>
<status status="PASS" endtime="20190820 16:28:12.129" starttime="20190820 16:28:12.128"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.130" starttime="20190820 16:28:12.129"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.130" starttime="20190820 16:28:12.128"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11244', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.131" level="INFO">${addedItem} = SC-T11244</msg>
<status status="PASS" endtime="20190820 16:28:12.131" starttime="20190820 16:28:12.130"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.132" starttime="20190820 16:28:12.132"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.132" starttime="20190820 16:28:12.130"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11245', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.133" level="INFO">${addedItem} = SC-T11245</msg>
<status status="PASS" endtime="20190820 16:28:12.134" starttime="20190820 16:28:12.133"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.134" starttime="20190820 16:28:12.134"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.135" starttime="20190820 16:28:12.132"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11246', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.136" level="INFO">${addedItem} = SC-T11246</msg>
<status status="PASS" endtime="20190820 16:28:12.136" starttime="20190820 16:28:12.135"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.137" starttime="20190820 16:28:12.136"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.137" starttime="20190820 16:28:12.135"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11247', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.138" level="INFO">${addedItem} = SC-T11247</msg>
<status status="PASS" endtime="20190820 16:28:12.138" starttime="20190820 16:28:12.138"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.139" starttime="20190820 16:28:12.139"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.139" starttime="20190820 16:28:12.137"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11248', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:58.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.140" level="INFO">${addedItem} = SC-T11248</msg>
<status status="PASS" endtime="20190820 16:28:12.140" starttime="20190820 16:28:12.140"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.141" starttime="20190820 16:28:12.141"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.141" starttime="20190820 16:28:12.140"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11249', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:59.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.142" level="INFO">${addedItem} = SC-T11249</msg>
<status status="PASS" endtime="20190820 16:28:12.143" starttime="20190820 16:28:12.142"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.143" starttime="20190820 16:28:12.143"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.143" starttime="20190820 16:28:12.142"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11250', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:59.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.145" level="INFO">${addedItem} = SC-T11250</msg>
<status status="PASS" endtime="20190820 16:28:12.145" starttime="20190820 16:28:12.144"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.145" starttime="20190820 16:28:12.145"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.146" starttime="20190820 16:28:12.144"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11251', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:59.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.147" level="INFO">${addedItem} = SC-T11251</msg>
<status status="PASS" endtime="20190820 16:28:12.147" starttime="20190820 16:28:12.146"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.148" starttime="20190820 16:28:12.147"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.148" starttime="20190820 16:28:12.146"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11252', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:59.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.150" level="INFO">${addedItem} = SC-T11252</msg>
<status status="PASS" endtime="20190820 16:28:12.150" starttime="20190820 16:28:12.149"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.151" starttime="20190820 16:28:12.150"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.151" starttime="20190820 16:28:12.149"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11253', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:59.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.152" level="INFO">${addedItem} = SC-T11253</msg>
<status status="PASS" endtime="20190820 16:28:12.153" starttime="20190820 16:28:12.152"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.153" starttime="20190820 16:28:12.153"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.154" starttime="20190820 16:28:12.151"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11254', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:59.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.155" level="INFO">${addedItem} = SC-T11254</msg>
<status status="PASS" endtime="20190820 16:28:12.155" starttime="20190820 16:28:12.154"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.156" starttime="20190820 16:28:12.155"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.156" starttime="20190820 16:28:12.154"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11255', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:27:59.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.157" level="INFO">${addedItem} = SC-T11255</msg>
<status status="PASS" endtime="20190820 16:28:12.157" starttime="20190820 16:28:12.156"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.158" starttime="20190820 16:28:12.157"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.158" starttime="20190820 16:28:12.156"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11256', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:28:00.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.159" level="INFO">${addedItem} = SC-T11256</msg>
<status status="PASS" endtime="20190820 16:28:12.159" starttime="20190820 16:28:12.159"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.160" starttime="20190820 16:28:12.160"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.161" starttime="20190820 16:28:12.158"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11257', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:28:00.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.162" level="INFO">${addedItem} = SC-T11257</msg>
<status status="PASS" endtime="20190820 16:28:12.162" starttime="20190820 16:28:12.161"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.163" starttime="20190820 16:28:12.162"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.163" starttime="20190820 16:28:12.161"></status>
</kw>
<kw type="foritem" name="${item} = {u'key': u'SC-T11258', u'majorVersion': 1, u'issueLinks': [u'SC-155'], u'parameters': {u'variables': [], u'entries': []}, u'createdOn': u'2019-08-20T09:28:00.000Z', u'testScript': {u'steps': [{u'id': ...">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item}</arg>
<arg>${contentType}</arg>
</arguments>
<assign>
<var>${addedItem}</var>
</assign>
<msg timestamp="20190820 16:28:12.164" level="INFO">${addedItem} = SC-T11258</msg>
<status status="PASS" endtime="20190820 16:28:12.164" starttime="20190820 16:28:12.163"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${testCaseList}</arg>
<arg>${addedItem}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:12.165" starttime="20190820 16:28:12.164"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.165" starttime="20190820 16:28:12.163"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.165" starttime="20190820 16:28:12.067"></status>
</kw>
<msg timestamp="20190820 16:28:12.166" level="INFO">${testCaseKeyList} = [u'SC-T11224', u'SC-T11225', u'SC-T11226', u'SC-T11227', u'SC-T11228', u'SC-T11229', u'SC-T11230', u'SC-T11231', u'SC-T11232', u'SC-T11233', u'SC-T11234', u'SC-T11235', u'SC-T11236', u'SC-T11237', u'S...</msg>
<status status="PASS" endtime="20190820 16:28:12.166" starttime="20190820 16:28:11.766"></status>
</kw>
<kw type="for" name="${testCaseKey} IN [ @{testCaseKeyList} ]">
<kw type="foritem" name="${testCaseKey} = SC-T11224">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.217" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11224, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.217" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.218" starttime="20190820 16:28:12.167"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.219" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.219" starttime="20190820 16:28:12.218"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.219" starttime="20190820 16:28:12.166"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11225">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.285" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11225, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.286" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.286" starttime="20190820 16:28:12.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.287" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.287" starttime="20190820 16:28:12.286"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.287" starttime="20190820 16:28:12.230"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11226">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.342" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11226, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.343" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.343" starttime="20190820 16:28:12.288"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.346" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.347" starttime="20190820 16:28:12.344"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.348" starttime="20190820 16:28:12.288"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11227">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.408" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11227, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.409" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.409" starttime="20190820 16:28:12.349"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.411" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.412" starttime="20190820 16:28:12.410"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.412" starttime="20190820 16:28:12.349"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11228">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.469" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11228, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.471" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.471" starttime="20190820 16:28:12.413"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.476" starttime="20190820 16:28:12.472"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.477" starttime="20190820 16:28:12.412"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11229">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.538" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11229, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.539" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.540" starttime="20190820 16:28:12.479"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.543" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.544" starttime="20190820 16:28:12.541"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.545" starttime="20190820 16:28:12.477"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11230">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.602" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11230, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.603" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.604" starttime="20190820 16:28:12.546"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.606" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.606" starttime="20190820 16:28:12.604"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.606" starttime="20190820 16:28:12.545"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11231">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.666" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11231, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.667" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.667" starttime="20190820 16:28:12.608"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.669" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.669" starttime="20190820 16:28:12.668"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.670" starttime="20190820 16:28:12.607"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11232">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.726" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11232, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.726" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.727" starttime="20190820 16:28:12.671"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.729" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.729" starttime="20190820 16:28:12.728"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.730" starttime="20190820 16:28:12.670"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11233">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.789" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11233, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.790" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.790" starttime="20190820 16:28:12.731"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.792" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.793" starttime="20190820 16:28:12.791"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.793" starttime="20190820 16:28:12.730"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11234">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.849" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11234, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.850" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.850" starttime="20190820 16:28:12.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.853" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.854" starttime="20190820 16:28:12.851"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.855" starttime="20190820 16:28:12.794"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11235">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.918" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11235, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.920" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.920" starttime="20190820 16:28:12.858"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.923" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.924" starttime="20190820 16:28:12.921"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.925" starttime="20190820 16:28:12.856"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11236">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:12.987" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11236, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:12.988" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.988" starttime="20190820 16:28:12.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:12.990" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:12.990" starttime="20190820 16:28:12.989"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:12.991" starttime="20190820 16:28:12.926"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11237">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.049" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11237, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.050" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.051" starttime="20190820 16:28:12.992"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.054" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.055" starttime="20190820 16:28:13.052"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.056" starttime="20190820 16:28:12.992"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11238">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.120" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11238, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.122" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.123" starttime="20190820 16:28:13.058"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.127" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.128" starttime="20190820 16:28:13.124"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.129" starttime="20190820 16:28:13.057"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11239">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.193" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11239, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.195" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.195" starttime="20190820 16:28:13.132"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.199" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.200" starttime="20190820 16:28:13.197"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.201" starttime="20190820 16:28:13.130"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11240">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.265" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11240, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.266" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.267" starttime="20190820 16:28:13.203"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.270" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.271" starttime="20190820 16:28:13.268"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.273" starttime="20190820 16:28:13.202"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11241">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.338" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11241, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.339" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.339" starttime="20190820 16:28:13.275"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.343" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.344" starttime="20190820 16:28:13.341"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.345" starttime="20190820 16:28:13.274"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11242">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.407" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11242, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.408" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.409" starttime="20190820 16:28:13.347"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.413" starttime="20190820 16:28:13.410"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.414" starttime="20190820 16:28:13.346"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11243">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.476" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11243, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.477" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.478" starttime="20190820 16:28:13.417"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.482" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.483" starttime="20190820 16:28:13.479"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.484" starttime="20190820 16:28:13.416"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11244">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.548" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11244, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.548" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.548" starttime="20190820 16:28:13.486"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.549" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.550" starttime="20190820 16:28:13.549"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.550" starttime="20190820 16:28:13.485"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11245">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.609" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11245, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.610" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.610" starttime="20190820 16:28:13.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.614" starttime="20190820 16:28:13.611"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.614" starttime="20190820 16:28:13.550"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11246">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.695" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11246, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.696" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.697" starttime="20190820 16:28:13.616"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.700" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.701" starttime="20190820 16:28:13.698"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.701" starttime="20190820 16:28:13.615"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11247">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.762" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11247, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.763" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.764" starttime="20190820 16:28:13.703"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.767" starttime="20190820 16:28:13.765"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.768" starttime="20190820 16:28:13.702"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11248">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.829" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11248, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.830" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.831" starttime="20190820 16:28:13.769"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.834" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.835" starttime="20190820 16:28:13.832"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.835" starttime="20190820 16:28:13.768"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11249">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.901" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11249, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.901" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.902" starttime="20190820 16:28:13.838"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.903" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.904" starttime="20190820 16:28:13.902"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.905" starttime="20190820 16:28:13.836"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11250">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:13.963" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11250, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:13.964" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.965" starttime="20190820 16:28:13.906"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:13.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:13.969" starttime="20190820 16:28:13.966"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:13.970" starttime="20190820 16:28:13.905"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11251">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.035" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11251, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.036" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.036" starttime="20190820 16:28:13.973"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.038" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.038" starttime="20190820 16:28:14.037"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.038" starttime="20190820 16:28:13.972"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11252">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.095" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11252, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.096" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.097" starttime="20190820 16:28:14.039"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.100" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.101" starttime="20190820 16:28:14.098"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.102" starttime="20190820 16:28:14.039"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11253">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.165" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11253, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.166" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.166" starttime="20190820 16:28:14.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.169" starttime="20190820 16:28:14.167"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.169" starttime="20190820 16:28:14.103"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11254">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.226" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11254, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.227" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.227" starttime="20190820 16:28:14.170"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.229" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.230" starttime="20190820 16:28:14.228"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.230" starttime="20190820 16:28:14.170"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11255">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.287" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11255, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.288" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.288" starttime="20190820 16:28:14.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.291" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.291" starttime="20190820 16:28:14.289"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.292" starttime="20190820 16:28:14.231"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11256">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.348" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11256, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.349" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.349" starttime="20190820 16:28:14.293"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.351" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.351" starttime="20190820 16:28:14.350"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.352" starttime="20190820 16:28:14.292"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11257">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.411" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11257, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.412" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.413" starttime="20190820 16:28:14.353"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.416" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.417" starttime="20190820 16:28:14.414"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.417" starttime="20190820 16:28:14.352"></status>
</kw>
<kw type="foritem" name="${testCaseKey} = SC-T11258">
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_DELETE_TESTCASE}/${testCaseKey}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.479" level="INFO">Delete Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase/SC-T11258, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.480" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.481" starttime="20190820 16:28:14.419"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${DELETE_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.484" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.485" starttime="20190820 16:28:14.482"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.486" starttime="20190820 16:28:14.418"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.487" starttime="20190820 16:28:12.166"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.488" starttime="20190820 16:28:11.764"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.489" critical="yes" starttime="20190820 16:28:11.751"></status>
</test>
<test id="s1-s1-s1-s1-t2" name="TC01_Add A Valid Sale Channel Name">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:14.497" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.498" starttime="20190820 16:28:14.496"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.501" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.502" starttime="20190820 16:28:14.500"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.502" starttime="20190820 16:28:14.494"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put a valid sale channel name</arg>
<arg>Sale channel name is added</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.505" level="INFO">${step} = {u'description': u'Put a valid sale channel name', u'expectedResult': u'Sale channel name is added'}</msg>
<status status="PASS" endtime="20190820 16:28:14.505" starttime="20190820 16:28:14.504"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.507" starttime="20190820 16:28:14.506"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.507" starttime="20190820 16:28:14.503"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put a valid sale channel code</arg>
<arg>Sale channel code is added</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.511" level="INFO">${step} = {u'description': u'Put a valid sale channel code', u'expectedResult': u'Sale channel code is added'}</msg>
<status status="PASS" endtime="20190820 16:28:14.511" starttime="20190820 16:28:14.509"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.513" starttime="20190820 16:28:14.512"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.513" starttime="20190820 16:28:14.508"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put a valid sale channel type</arg>
<arg>Sale channel type is added</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.516" level="INFO">${step} = {u'description': u'Put a valid sale channel type', u'expectedResult': u'Sale channel type is added'}</msg>
<status status="PASS" endtime="20190820 16:28:14.516" starttime="20190820 16:28:14.515"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.518" starttime="20190820 16:28:14.517"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.518" starttime="20190820 16:28:14.514"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put a valid sale channel seller</arg>
<arg>Sale channel seller is added</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.521" level="INFO">${step} = {u'description': u'Put a valid sale channel seller', u'expectedResult': u'Sale channel seller is added'}</msg>
<status status="PASS" endtime="20190820 16:28:14.521" starttime="20190820 16:28:14.520"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.523" starttime="20190820 16:28:14.522"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.524" starttime="20190820 16:28:14.519"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put a valid sale channel status</arg>
<arg>Sale channel status is added</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.526" level="INFO">${step} = {u'description': u'Put a valid sale channel status', u'expectedResult': u'Sale channel status is added'}</msg>
<status status="PASS" endtime="20190820 16:28:14.527" starttime="20190820 16:28:14.525"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.528" starttime="20190820 16:28:14.527"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.529" starttime="20190820 16:28:14.524"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Commit the request</arg>
<arg>A new sale channel is created successfully</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.532" level="INFO">${step} = {u'description': u'Commit the request', u'expectedResult': u'A new sale channel is created successfully'}</msg>
<status status="PASS" endtime="20190820 16:28:14.532" starttime="20190820 16:28:14.530"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.533" starttime="20190820 16:28:14.533"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.534" starttime="20190820 16:28:14.529"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:14.541" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put a valid sale channel name', u'expectedResult': u'Sale channel name is added'}, {u'description': u'Put a valid sale channel code', u'expecte...</msg>
<status status="PASS" endtime="20190820 16:28:14.541" starttime="20190820 16:28:14.539"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:14.543" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC01_Add A Valid Sale Channel Name', u'testScript': {u'steps': [{u'description': u'Put a valid sale c...</msg>
<status status="PASS" endtime="20190820 16:28:14.544" starttime="20190820 16:28:14.542"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.673" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC01_Add A Valid Sale Channel Name", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put a valid sale channel name", "expectedResult": "Sale channel name is added"}, {"description": "Put a valid sale channel code", "expectedResult": "Sale channel code is added"}, {"description": "Put a valid sale channel type", "expectedResult": "Sale channel type is added"}, {"description": "Put a valid sale channel seller", "expectedResult": "Sale channel seller is added"}, {"description": "Put a valid sale channel status", "expectedResult": "Sale channel status is added"}, {"description": "Commit the request", "expectedResult": "A new sale channel is created successfully"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.673" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.673" starttime="20190820 16:28:14.544"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.675" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.675" starttime="20190820 16:28:14.674"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.675" starttime="20190820 16:28:14.538"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.676" starttime="20190820 16:28:14.537"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.676" starttime="20190820 16:28:14.536"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.676" starttime="20190820 16:28:14.535"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.677" critical="yes" starttime="20190820 16:28:14.491"></status>
</test>
<test id="s1-s1-s1-s1-t3" name="TC02_Sale Channel Name = null">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:14.679" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.679" starttime="20190820 16:28:14.679"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.680" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.680" starttime="20190820 16:28:14.680"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.681" starttime="20190820 16:28:14.678"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name = null</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.683" level="INFO">${step} = {u'description': u'Put sale channel name = null', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:14.683" starttime="20190820 16:28:14.682"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.684" starttime="20190820 16:28:14.683"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.684" starttime="20190820 16:28:14.681"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:14.688" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name = null', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:14.688" starttime="20190820 16:28:14.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:14.689" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC02_Sale Channel Name = null', u'testScript': {u'steps': [{u'description': u'Put sale channel name =...</msg>
<status status="PASS" endtime="20190820 16:28:14.690" starttime="20190820 16:28:14.688"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.783" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC02_Sale Channel Name = null", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name = null", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.784" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.784" starttime="20190820 16:28:14.690"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.786" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.787" starttime="20190820 16:28:14.785"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.788" starttime="20190820 16:28:14.686"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.788" starttime="20190820 16:28:14.686"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.789" starttime="20190820 16:28:14.685"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.790" starttime="20190820 16:28:14.684"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.791" critical="yes" starttime="20190820 16:28:14.677"></status>
</test>
<test id="s1-s1-s1-s1-t4" name="TC03_Sale Channel Name = empty">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:14.795" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.796" starttime="20190820 16:28:14.794"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.798" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.798" starttime="20190820 16:28:14.797"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.799" starttime="20190820 16:28:14.793"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put request without filling name value</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.803" level="INFO">${step} = {u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:14.803" starttime="20190820 16:28:14.801"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.804" starttime="20190820 16:28:14.803"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.804" starttime="20190820 16:28:14.801"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:14.809" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:14.810" starttime="20190820 16:28:14.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:14.812" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC03_Sale Channel Name = empty', u'testScript': {u'steps': [{u'description': u'Put request without fi...</msg>
<status status="PASS" endtime="20190820 16:28:14.812" starttime="20190820 16:28:14.810"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:14.901" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC03_Sale Channel Name = empty", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put request without filling name value", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:14.902" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.903" starttime="20190820 16:28:14.812"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.906" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:14.907" starttime="20190820 16:28:14.904"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.908" starttime="20190820 16:28:14.807"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.910" starttime="20190820 16:28:14.807"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.910" starttime="20190820 16:28:14.806"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.912" starttime="20190820 16:28:14.805"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.913" critical="yes" starttime="20190820 16:28:14.792"></status>
</test>
<test id="s1-s1-s1-s1-t5" name="TC04_Sale Channel Name Containing Space Only">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:14.920" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.920" starttime="20190820 16:28:14.918"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:14.922" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:14.922" starttime="20190820 16:28:14.921"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.923" starttime="20190820 16:28:14.917"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name containing space only</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:14.925" level="INFO">${step} = {u'description': u'Put sale channel name containing space only', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:14.926" starttime="20190820 16:28:14.924"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:14.927" starttime="20190820 16:28:14.926"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:14.928" starttime="20190820 16:28:14.923"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:14.934" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name containing space only', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:14.934" starttime="20190820 16:28:14.933"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:14.936" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC04_Sale Channel Name Containing Space Only', u'testScript': {u'steps': [{u'description': u'Put sale...</msg>
<status status="PASS" endtime="20190820 16:28:14.937" starttime="20190820 16:28:14.935"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.032" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC04_Sale Channel Name Containing Space Only", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name containing space only", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.033" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.034" starttime="20190820 16:28:14.937"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.038" starttime="20190820 16:28:15.035"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.039" starttime="20190820 16:28:14.931"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.040" starttime="20190820 16:28:14.930"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.041" starttime="20190820 16:28:14.929"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.042" starttime="20190820 16:28:14.928"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.043" critical="yes" starttime="20190820 16:28:14.914"></status>
</test>
<test id="s1-s1-s1-s1-t6" name="TC05_Sale Channel Name Containing Reduntdant Space: Leading, Following">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.050" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.050" starttime="20190820 16:28:15.048"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.053" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.054" starttime="20190820 16:28:15.052"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.055" starttime="20190820 16:28:15.047"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name containing some redundant spaces</arg>
<arg>The sale channel is added, the reduntdant spaces are cut out</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.060" level="INFO">${step} = {u'description': u'Put sale channel name containing some redundant spaces', u'expectedResult': u'The sale channel is added, the reduntdant spaces are cut out'}</msg>
<status status="PASS" endtime="20190820 16:28:15.060" starttime="20190820 16:28:15.058"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.063" starttime="20190820 16:28:15.061"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.064" starttime="20190820 16:28:15.056"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.074" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name containing some redundant spaces', u'expectedResult': u'The sale channel is added, the reduntdant spaces are cut out'}]}</msg>
<status status="PASS" endtime="20190820 16:28:15.074" starttime="20190820 16:28:15.073"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.077" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC05_Sale Channel Name Containing Reduntdant Space: Leading, Following', u'testScript': {u'steps': [{...</msg>
<status status="PASS" endtime="20190820 16:28:15.077" starttime="20190820 16:28:15.075"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.169" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC05_Sale Channel Name Containing Reduntdant Space: Leading, Following", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name containing some redundant spaces", "expectedResult": "The sale channel is added, the reduntdant spaces are cut out"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.170" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.170" starttime="20190820 16:28:15.078"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.175" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.176" starttime="20190820 16:28:15.172"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.178" starttime="20190820 16:28:15.071"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.179" starttime="20190820 16:28:15.070"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.180" starttime="20190820 16:28:15.068"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.181" starttime="20190820 16:28:15.065"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.182" critical="yes" starttime="20190820 16:28:15.045"></status>
</test>
<test id="s1-s1-s1-s1-t7" name="TC06_Sale Channel Name With Max Length">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.189" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.190" starttime="20190820 16:28:15.188"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.192" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.192" starttime="20190820 16:28:15.191"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.193" starttime="20190820 16:28:15.186"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name containing 255 character</arg>
<arg>The sale channel is added successfully</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.196" level="INFO">${step} = {u'description': u'Put sale channel name containing 255 character', u'expectedResult': u'The sale channel is added successfully'}</msg>
<status status="PASS" endtime="20190820 16:28:15.197" starttime="20190820 16:28:15.195"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.199" starttime="20190820 16:28:15.197"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.200" starttime="20190820 16:28:15.194"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.207" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name containing 255 character', u'expectedResult': u'The sale channel is added successfully'}]}</msg>
<status status="PASS" endtime="20190820 16:28:15.208" starttime="20190820 16:28:15.206"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.211" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC06_Sale Channel Name With Max Length', u'testScript': {u'steps': [{u'description': u'Put sale chann...</msg>
<status status="PASS" endtime="20190820 16:28:15.211" starttime="20190820 16:28:15.208"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.300" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC06_Sale Channel Name With Max Length", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name containing 255 character", "expectedResult": "The sale channel is added successfully"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.301" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.302" starttime="20190820 16:28:15.212"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.305" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.306" starttime="20190820 16:28:15.303"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.307" starttime="20190820 16:28:15.204"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.308" starttime="20190820 16:28:15.203"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.309" starttime="20190820 16:28:15.202"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.310" starttime="20190820 16:28:15.200"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.311" critical="yes" starttime="20190820 16:28:15.184"></status>
</test>
<test id="s1-s1-s1-s1-t8" name="TC07_Sale Channel Name Over Max Length">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.319" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.319" starttime="20190820 16:28:15.317"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.323" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.323" starttime="20190820 16:28:15.321"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.324" starttime="20190820 16:28:15.315"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name containing 256 character</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.330" level="INFO">${step} = {u'description': u'Put sale channel name containing 256 character', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:15.331" starttime="20190820 16:28:15.328"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.333" starttime="20190820 16:28:15.332"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.335" starttime="20190820 16:28:15.326"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.343" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name containing 256 character', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:15.344" starttime="20190820 16:28:15.342"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.346" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC07_Sale Channel Name Over Max Length', u'testScript': {u'steps': [{u'description': u'Put sale chann...</msg>
<status status="PASS" endtime="20190820 16:28:15.347" starttime="20190820 16:28:15.344"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.436" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC07_Sale Channel Name Over Max Length", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name containing 256 character", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.436" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.437" starttime="20190820 16:28:15.347"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.438" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.439" starttime="20190820 16:28:15.437"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.439" starttime="20190820 16:28:15.341"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.440" starttime="20190820 16:28:15.340"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.440" starttime="20190820 16:28:15.338"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.441" starttime="20190820 16:28:15.336"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.441" critical="yes" starttime="20190820 16:28:15.313"></status>
</test>
<test id="s1-s1-s1-s1-t9" name="TC08_Dupicated Sale Channel Name">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.445" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.445" starttime="20190820 16:28:15.444"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.447" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.447" starttime="20190820 16:28:15.446"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.448" starttime="20190820 16:28:15.443"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name duplicated with an existed one</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.450" level="INFO">${step} = {u'description': u'Put sale channel name duplicated with an existed one', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:15.451" starttime="20190820 16:28:15.449"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.452" starttime="20190820 16:28:15.451"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.452" starttime="20190820 16:28:15.448"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.459" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name duplicated with an existed one', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:15.460" starttime="20190820 16:28:15.458"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.461" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC08_Dupicated Sale Channel Name', u'testScript': {u'steps': [{u'description': u'Put sale channel nam...</msg>
<status status="PASS" endtime="20190820 16:28:15.461" starttime="20190820 16:28:15.460"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.547" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC08_Dupicated Sale Channel Name", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name duplicated with an existed one", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.548" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.548" starttime="20190820 16:28:15.462"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.549" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.549" starttime="20190820 16:28:15.548"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.549" starttime="20190820 16:28:15.456"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.549" starttime="20190820 16:28:15.455"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.550" starttime="20190820 16:28:15.454"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.550" starttime="20190820 16:28:15.453"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.550" critical="yes" starttime="20190820 16:28:15.442"></status>
</test>
<test id="s1-s1-s1-s1-t10" name="TC09_Dupicated Sale Channel Name - Uppercase - Lowercase">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.552" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.553" starttime="20190820 16:28:15.552"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.553" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.554" starttime="20190820 16:28:15.553"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.554" starttime="20190820 16:28:15.552"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name duplicated with an existed one, one in uppercase, one in lower case</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.555" level="INFO">${step} = {u'description': u'Put sale channel name duplicated with an existed one, one in uppercase, one in lower case', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:15.556" starttime="20190820 16:28:15.555"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.556" starttime="20190820 16:28:15.556"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.557" starttime="20190820 16:28:15.554"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.560" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name duplicated with an existed one, one in uppercase, one in lower case', u'expectedResult': u'The sale channel is failed to ...</msg>
<status status="PASS" endtime="20190820 16:28:15.560" starttime="20190820 16:28:15.559"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.561" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC09_Dupicated Sale Channel Name - Uppercase - Lowercase', u'testScript': {u'steps': [{u'description'...</msg>
<status status="PASS" endtime="20190820 16:28:15.561" starttime="20190820 16:28:15.560"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.651" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC09_Dupicated Sale Channel Name - Uppercase - Lowercase", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name duplicated with an existed one, one in uppercase, one in lower case", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.651" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.652" starttime="20190820 16:28:15.561"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.655" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.656" starttime="20190820 16:28:15.653"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.657" starttime="20190820 16:28:15.559"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.657" starttime="20190820 16:28:15.558"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.658" starttime="20190820 16:28:15.557"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.659" starttime="20190820 16:28:15.557"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.660" critical="yes" starttime="20190820 16:28:15.551"></status>
</test>
<test id="s1-s1-s1-s1-t11" name="TC10_Dupicated Sale Channel Name - Vietnamse With Accent - Without Accent">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.665" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.665" starttime="20190820 16:28:15.664"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.667" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.667" starttime="20190820 16:28:15.666"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.668" starttime="20190820 16:28:15.663"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name duplicated with an existed one, one With Accent, one Without Accent</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.671" level="INFO">${step} = {u'description': u'Put sale channel name duplicated with an existed one, one With Accent, one Without Accent', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:15.672" starttime="20190820 16:28:15.670"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.673" starttime="20190820 16:28:15.672"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.673" starttime="20190820 16:28:15.669"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.678" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name duplicated with an existed one, one With Accent, one Without Accent', u'expectedResult': u'The sale channel is failed to ...</msg>
<status status="PASS" endtime="20190820 16:28:15.678" starttime="20190820 16:28:15.677"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.679" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC10_Dupicated Sale Channel Name - Vietnamse With Accent - Without Accent', u'testScript': {u'steps':...</msg>
<status status="PASS" endtime="20190820 16:28:15.680" starttime="20190820 16:28:15.678"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.767" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC10_Dupicated Sale Channel Name - Vietnamse With Accent - Without Accent", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name duplicated with an existed one, one With Accent, one Without Accent", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.768" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.768" starttime="20190820 16:28:15.680"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.771" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.772" starttime="20190820 16:28:15.769"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.773" starttime="20190820 16:28:15.676"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.774" starttime="20190820 16:28:15.675"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.775" starttime="20190820 16:28:15.674"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.776" starttime="20190820 16:28:15.674"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.777" critical="yes" starttime="20190820 16:28:15.661"></status>
</test>
<test id="s1-s1-s1-s1-t12" name="TC11_Sale Channel Name Containing Special Characters">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.783" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.784" starttime="20190820 16:28:15.782"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.786" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.787" starttime="20190820 16:28:15.785"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.788" starttime="20190820 16:28:15.781"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel name containing special characters</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.791" level="INFO">${step} = {u'description': u'Put sale channel name containing special characters', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:15.792" starttime="20190820 16:28:15.790"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.793" starttime="20190820 16:28:15.792"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.793" starttime="20190820 16:28:15.789"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.798" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel name containing special characters', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:15.799" starttime="20190820 16:28:15.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.800" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC11_Sale Channel Name Containing Special Characters', u'testScript': {u'steps': [{u'description': u'...</msg>
<status status="PASS" endtime="20190820 16:28:15.800" starttime="20190820 16:28:15.799"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:15.891" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC11_Sale Channel Name Containing Special Characters", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel name containing special characters", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:15.891" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.892" starttime="20190820 16:28:15.801"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.894" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:15.894" starttime="20190820 16:28:15.892"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.895" starttime="20190820 16:28:15.796"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.896" starttime="20190820 16:28:15.796"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.896" starttime="20190820 16:28:15.795"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.897" starttime="20190820 16:28:15.794"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.898" critical="yes" starttime="20190820 16:28:15.779"></status>
</test>
<test id="s1-s1-s1-s1-t13" name="TC12_Sale Channel Code = null">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:15.902" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.902" starttime="20190820 16:28:15.901"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:15.904" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:15.905" starttime="20190820 16:28:15.903"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.905" starttime="20190820 16:28:15.900"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code = null</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:15.909" level="INFO">${step} = {u'description': u'Put sale channel code = null', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:15.909" starttime="20190820 16:28:15.907"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:15.911" starttime="20190820 16:28:15.910"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:15.911" starttime="20190820 16:28:15.906"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:15.916" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code = null', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:15.916" starttime="20190820 16:28:15.915"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:15.918" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC12_Sale Channel Code = null', u'testScript': {u'steps': [{u'description': u'Put sale channel code =...</msg>
<status status="PASS" endtime="20190820 16:28:15.918" starttime="20190820 16:28:15.917"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.008" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC12_Sale Channel Code = null", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code = null", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.009" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.010" starttime="20190820 16:28:15.919"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.012" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.013" starttime="20190820 16:28:16.010"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.014" starttime="20190820 16:28:15.914"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.015" starttime="20190820 16:28:15.913"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.016" starttime="20190820 16:28:15.912"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.018" starttime="20190820 16:28:15.911"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.019" critical="yes" starttime="20190820 16:28:15.899"></status>
</test>
<test id="s1-s1-s1-s1-t14" name="TC13_Sale Channel Code = empty">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.029" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.029" starttime="20190820 16:28:16.026"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.031" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.031" starttime="20190820 16:28:16.030"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.032" starttime="20190820 16:28:16.024"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put request without filling name value</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.035" level="INFO">${step} = {u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:16.035" starttime="20190820 16:28:16.033"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.037" starttime="20190820 16:28:16.036"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.038" starttime="20190820 16:28:16.032"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.045" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:16.045" starttime="20190820 16:28:16.044"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.048" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC13_Sale Channel Code = empty', u'testScript': {u'steps': [{u'description': u'Put request without fi...</msg>
<status status="PASS" endtime="20190820 16:28:16.048" starttime="20190820 16:28:16.046"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.140" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC13_Sale Channel Code = empty", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put request without filling name value", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.141" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.141" starttime="20190820 16:28:16.049"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.142" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.142" starttime="20190820 16:28:16.141"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.143" starttime="20190820 16:28:16.042"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.144" starttime="20190820 16:28:16.041"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.144" starttime="20190820 16:28:16.040"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.144" starttime="20190820 16:28:16.038"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.145" critical="yes" starttime="20190820 16:28:16.021"></status>
</test>
<test id="s1-s1-s1-s1-t15" name="TC14_Sale Channel Code Containing Space Only">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.148" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.148" starttime="20190820 16:28:16.147"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.149" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.149" starttime="20190820 16:28:16.148"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.149" starttime="20190820 16:28:16.146"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code containing space only</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.151" level="INFO">${step} = {u'description': u'Put sale channel code containing space only', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:16.151" starttime="20190820 16:28:16.150"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.152" starttime="20190820 16:28:16.151"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.152" starttime="20190820 16:28:16.150"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.155" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code containing space only', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:16.155" starttime="20190820 16:28:16.155"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.157" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC14_Sale Channel Code Containing Space Only', u'testScript': {u'steps': [{u'description': u'Put sale...</msg>
<status status="PASS" endtime="20190820 16:28:16.157" starttime="20190820 16:28:16.156"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.245" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC14_Sale Channel Code Containing Space Only", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code containing space only", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.246" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.246" starttime="20190820 16:28:16.157"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.247" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.247" starttime="20190820 16:28:16.246"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.248" starttime="20190820 16:28:16.154"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.248" starttime="20190820 16:28:16.154"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.248" starttime="20190820 16:28:16.153"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.248" starttime="20190820 16:28:16.152"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.249" critical="yes" starttime="20190820 16:28:16.146"></status>
</test>
<test id="s1-s1-s1-s1-t16" name="TC15_Sale Channel Code Containing Reduntdant Space: Leading, Following">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.252" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.252" starttime="20190820 16:28:16.251"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.253" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.253" starttime="20190820 16:28:16.252"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.253" starttime="20190820 16:28:16.250"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code containing some redundant spaces</arg>
<arg>The sale channel is added, the reduntdant spaces are cut out</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.255" level="INFO">${step} = {u'description': u'Put sale channel code containing some redundant spaces', u'expectedResult': u'The sale channel is added, the reduntdant spaces are cut out'}</msg>
<status status="PASS" endtime="20190820 16:28:16.255" starttime="20190820 16:28:16.254"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.256" starttime="20190820 16:28:16.255"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.256" starttime="20190820 16:28:16.253"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.259" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code containing some redundant spaces', u'expectedResult': u'The sale channel is added, the reduntdant spaces are cut out'}]}</msg>
<status status="PASS" endtime="20190820 16:28:16.259" starttime="20190820 16:28:16.258"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.261" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC15_Sale Channel Code Containing Reduntdant Space: Leading, Following', u'testScript': {u'steps': [{...</msg>
<status status="PASS" endtime="20190820 16:28:16.261" starttime="20190820 16:28:16.259"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.340" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC15_Sale Channel Code Containing Reduntdant Space: Leading, Following", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code containing some redundant spaces", "expectedResult": "The sale channel is added, the reduntdant spaces are cut out"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.341" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.341" starttime="20190820 16:28:16.261"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.342" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.342" starttime="20190820 16:28:16.341"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.342" starttime="20190820 16:28:16.258"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.343" starttime="20190820 16:28:16.257"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.343" starttime="20190820 16:28:16.257"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.343" starttime="20190820 16:28:16.256"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.343" critical="yes" starttime="20190820 16:28:16.249"></status>
</test>
<test id="s1-s1-s1-s1-t17" name="TC16_Sale Channel Code With Max Length">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.345" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.346" starttime="20190820 16:28:16.345"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.346" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.346" starttime="20190820 16:28:16.346"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.347" starttime="20190820 16:28:16.345"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code containing 255 character</arg>
<arg>The sale channel is added successfully</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.348" level="INFO">${step} = {u'description': u'Put sale channel code containing 255 character', u'expectedResult': u'The sale channel is added successfully'}</msg>
<status status="PASS" endtime="20190820 16:28:16.349" starttime="20190820 16:28:16.348"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.349" starttime="20190820 16:28:16.349"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.350" starttime="20190820 16:28:16.347"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.353" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code containing 255 character', u'expectedResult': u'The sale channel is added successfully'}]}</msg>
<status status="PASS" endtime="20190820 16:28:16.353" starttime="20190820 16:28:16.352"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.354" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC16_Sale Channel Code With Max Length', u'testScript': {u'steps': [{u'description': u'Put sale chann...</msg>
<status status="PASS" endtime="20190820 16:28:16.354" starttime="20190820 16:28:16.353"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.435" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC16_Sale Channel Code With Max Length", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code containing 255 character", "expectedResult": "The sale channel is added successfully"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.436" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.436" starttime="20190820 16:28:16.355"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.439" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.440" starttime="20190820 16:28:16.437"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.441" starttime="20190820 16:28:16.352"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.442" starttime="20190820 16:28:16.351"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.443" starttime="20190820 16:28:16.350"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.444" starttime="20190820 16:28:16.350"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.445" critical="yes" starttime="20190820 16:28:16.344"></status>
</test>
<test id="s1-s1-s1-s1-t18" name="TC17_Sale Channel Code Over Max Length">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.452" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.452" starttime="20190820 16:28:16.451"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.454" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.455" starttime="20190820 16:28:16.453"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.455" starttime="20190820 16:28:16.449"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code containing 256 character</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.459" level="INFO">${step} = {u'description': u'Put sale channel code containing 256 character', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:16.459" starttime="20190820 16:28:16.457"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.461" starttime="20190820 16:28:16.460"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.461" starttime="20190820 16:28:16.456"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.469" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code containing 256 character', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:16.470" starttime="20190820 16:28:16.468"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.473" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC17_Sale Channel Code Over Max Length', u'testScript': {u'steps': [{u'description': u'Put sale chann...</msg>
<status status="PASS" endtime="20190820 16:28:16.473" starttime="20190820 16:28:16.471"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.567" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC17_Sale Channel Code Over Max Length", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code containing 256 character", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.568" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.568" starttime="20190820 16:28:16.474"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.569" starttime="20190820 16:28:16.568"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.570" starttime="20190820 16:28:16.466"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.570" starttime="20190820 16:28:16.465"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.570" starttime="20190820 16:28:16.463"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.571" starttime="20190820 16:28:16.462"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.572" critical="yes" starttime="20190820 16:28:16.447"></status>
</test>
<test id="s1-s1-s1-s1-t19" name="TC18_Dupicated Sale Channel Code">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.577" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.578" starttime="20190820 16:28:16.576"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.580" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.580" starttime="20190820 16:28:16.579"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.581" starttime="20190820 16:28:16.575"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code duplicated with an existed one</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.585" level="INFO">${step} = {u'description': u'Put sale channel code duplicated with an existed one', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:16.586" starttime="20190820 16:28:16.583"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.588" starttime="20190820 16:28:16.587"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.589" starttime="20190820 16:28:16.582"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.599" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code duplicated with an existed one', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:16.600" starttime="20190820 16:28:16.597"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.602" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC18_Dupicated Sale Channel Code', u'testScript': {u'steps': [{u'description': u'Put sale channel cod...</msg>
<status status="PASS" endtime="20190820 16:28:16.602" starttime="20190820 16:28:16.601"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.694" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC18_Dupicated Sale Channel Code", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code duplicated with an existed one", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.695" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.696" starttime="20190820 16:28:16.603"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.699" starttime="20190820 16:28:16.697"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.700" starttime="20190820 16:28:16.596"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.701" starttime="20190820 16:28:16.594"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.702" starttime="20190820 16:28:16.593"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.703" starttime="20190820 16:28:16.590"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.704" critical="yes" starttime="20190820 16:28:16.573"></status>
</test>
<test id="s1-s1-s1-s1-t20" name="TC19_Dupicated Sale Channel Code - Uppercase - Lowercase">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.711" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.711" starttime="20190820 16:28:16.710"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.714" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.715" starttime="20190820 16:28:16.712"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.715" starttime="20190820 16:28:16.708"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code duplicated with an existed one, one in uppercase, one in lower case</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.721" level="INFO">${step} = {u'description': u'Put sale channel code duplicated with an existed one, one in uppercase, one in lower case', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:16.722" starttime="20190820 16:28:16.718"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.723" starttime="20190820 16:28:16.723"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.724" starttime="20190820 16:28:16.717"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.730" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code duplicated with an existed one, one in uppercase, one in lower case', u'expectedResult': u'The sale channel is failed to ...</msg>
<status status="PASS" endtime="20190820 16:28:16.731" starttime="20190820 16:28:16.729"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.733" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC19_Dupicated Sale Channel Code - Uppercase - Lowercase', u'testScript': {u'steps': [{u'description'...</msg>
<status status="PASS" endtime="20190820 16:28:16.734" starttime="20190820 16:28:16.731"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.825" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC19_Dupicated Sale Channel Code - Uppercase - Lowercase", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code duplicated with an existed one, one in uppercase, one in lower case", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.825" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.826" starttime="20190820 16:28:16.734"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.826" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.827" starttime="20190820 16:28:16.826"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.827" starttime="20190820 16:28:16.728"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.827" starttime="20190820 16:28:16.727"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.828" starttime="20190820 16:28:16.726"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.828" starttime="20190820 16:28:16.725"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.828" critical="yes" starttime="20190820 16:28:16.706"></status>
</test>
<test id="s1-s1-s1-s1-t21" name="TC20_Dupicated Sale Channel Code - Vietnamse With Accent - Without Accent">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.830" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.831" starttime="20190820 16:28:16.830"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.831" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.832" starttime="20190820 16:28:16.831"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.832" starttime="20190820 16:28:16.830"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code duplicated with an existed one, one With Accent, one Without Accent</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.834" level="INFO">${step} = {u'description': u'Put sale channel code duplicated with an existed one, one With Accent, one Without Accent', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:16.834" starttime="20190820 16:28:16.833"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.835" starttime="20190820 16:28:16.835"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.835" starttime="20190820 16:28:16.832"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.839" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code duplicated with an existed one, one With Accent, one Without Accent', u'expectedResult': u'The sale channel is failed to ...</msg>
<status status="PASS" endtime="20190820 16:28:16.839" starttime="20190820 16:28:16.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.840" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC20_Dupicated Sale Channel Code - Vietnamse With Accent - Without Accent', u'testScript': {u'steps':...</msg>
<status status="PASS" endtime="20190820 16:28:16.840" starttime="20190820 16:28:16.839"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:16.929" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC20_Dupicated Sale Channel Code - Vietnamse With Accent - Without Accent", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code duplicated with an existed one, one With Accent, one Without Accent", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:16.930" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.930" starttime="20190820 16:28:16.841"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.934" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:16.935" starttime="20190820 16:28:16.931"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.936" starttime="20190820 16:28:16.837"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.938" starttime="20190820 16:28:16.837"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.938" starttime="20190820 16:28:16.836"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.939" starttime="20190820 16:28:16.836"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.940" critical="yes" starttime="20190820 16:28:16.829"></status>
</test>
<test id="s1-s1-s1-s1-t22" name="TC21_Sale Channel Code Containing Special Characters">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:16.947" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.948" starttime="20190820 16:28:16.946"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:16.951" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:16.952" starttime="20190820 16:28:16.949"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.953" starttime="20190820 16:28:16.944"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code containing special characters</arg>
<arg>The sale channel is added successfully</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:16.960" level="INFO">${step} = {u'description': u'Put sale channel code containing special characters', u'expectedResult': u'The sale channel is added successfully'}</msg>
<status status="PASS" endtime="20190820 16:28:16.960" starttime="20190820 16:28:16.956"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:16.961" starttime="20190820 16:28:16.960"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:16.962" starttime="20190820 16:28:16.954"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:16.967" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code containing special characters', u'expectedResult': u'The sale channel is added successfully'}]}</msg>
<status status="PASS" endtime="20190820 16:28:16.968" starttime="20190820 16:28:16.966"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:16.970" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC21_Sale Channel Code Containing Special Characters', u'testScript': {u'steps': [{u'description': u'...</msg>
<status status="PASS" endtime="20190820 16:28:16.970" starttime="20190820 16:28:16.968"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.062" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC21_Sale Channel Code Containing Special Characters", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code containing special characters", "expectedResult": "The sale channel is added successfully"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.063" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.063" starttime="20190820 16:28:16.970"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.064" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.064" starttime="20190820 16:28:17.063"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.064" starttime="20190820 16:28:16.965"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.065" starttime="20190820 16:28:16.964"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.065" starttime="20190820 16:28:16.963"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.065" starttime="20190820 16:28:16.962"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.066" critical="yes" starttime="20190820 16:28:16.942"></status>
</test>
<test id="s1-s1-s1-s1-t23" name="TC22_Sale Channel Type = null">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.068" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.068" starttime="20190820 16:28:17.068"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.069" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.069" starttime="20190820 16:28:17.068"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.069" starttime="20190820 16:28:17.067"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code = null</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.071" level="INFO">${step} = {u'description': u'Put sale channel code = null', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.071" starttime="20190820 16:28:17.070"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.072" starttime="20190820 16:28:17.071"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.072" starttime="20190820 16:28:17.070"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.076" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code = null', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.076" starttime="20190820 16:28:17.075"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.077" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC22_Sale Channel Type = null', u'testScript': {u'steps': [{u'description': u'Put sale channel code =...</msg>
<status status="PASS" endtime="20190820 16:28:17.077" starttime="20190820 16:28:17.076"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.169" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC22_Sale Channel Type = null", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code = null", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.169" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.169" starttime="20190820 16:28:17.077"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.170" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.171" starttime="20190820 16:28:17.170"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.171" starttime="20190820 16:28:17.074"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.172" starttime="20190820 16:28:17.074"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.172" starttime="20190820 16:28:17.073"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.172" starttime="20190820 16:28:17.072"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.172" critical="yes" starttime="20190820 16:28:17.066"></status>
</test>
<test id="s1-s1-s1-s1-t24" name="TC23_Sale Channel Type = empty">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.175" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.175" starttime="20190820 16:28:17.175"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.176" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.177" starttime="20190820 16:28:17.176"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.177" starttime="20190820 16:28:17.174"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put request without filling name value</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.179" level="INFO">${step} = {u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.179" starttime="20190820 16:28:17.178"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.179" starttime="20190820 16:28:17.179"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.180" starttime="20190820 16:28:17.177"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.183" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.183" starttime="20190820 16:28:17.182"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.184" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC23_Sale Channel Type = empty', u'testScript': {u'steps': [{u'description': u'Put request without fi...</msg>
<status status="PASS" endtime="20190820 16:28:17.185" starttime="20190820 16:28:17.183"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.277" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC23_Sale Channel Type = empty", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put request without filling name value", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.277" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.278" starttime="20190820 16:28:17.185"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.280" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.281" starttime="20190820 16:28:17.279"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.281" starttime="20190820 16:28:17.182"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.282" starttime="20190820 16:28:17.181"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.283" starttime="20190820 16:28:17.181"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.283" starttime="20190820 16:28:17.180"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.284" critical="yes" starttime="20190820 16:28:17.173"></status>
</test>
<test id="s1-s1-s1-s1-t25" name="TC24_Sale Channel Type Containing Space Only">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.289" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.290" starttime="20190820 16:28:17.288"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.292" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.292" starttime="20190820 16:28:17.290"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.293" starttime="20190820 16:28:17.287"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel code containing space only</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.297" level="INFO">${step} = {u'description': u'Put sale channel code containing space only', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.298" starttime="20190820 16:28:17.295"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.300" starttime="20190820 16:28:17.299"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.301" starttime="20190820 16:28:17.294"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.309" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel code containing space only', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.310" starttime="20190820 16:28:17.308"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.313" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC24_Sale Channel Type Containing Space Only', u'testScript': {u'steps': [{u'description': u'Put sale...</msg>
<status status="PASS" endtime="20190820 16:28:17.313" starttime="20190820 16:28:17.311"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.406" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC24_Sale Channel Type Containing Space Only", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel code containing space only", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.406" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.407" starttime="20190820 16:28:17.314"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.409" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.409" starttime="20190820 16:28:17.407"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.410" starttime="20190820 16:28:17.306"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.411" starttime="20190820 16:28:17.305"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.411" starttime="20190820 16:28:17.303"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.412" starttime="20190820 16:28:17.301"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.413" critical="yes" starttime="20190820 16:28:17.285"></status>
</test>
<test id="s1-s1-s1-s1-t26" name="TC26_Sale Channel Type Over Max Length">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.417" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.418" starttime="20190820 16:28:17.417"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.420" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.420" starttime="20190820 16:28:17.419"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.421" starttime="20190820 16:28:17.415"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel type containing 256 character</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.425" level="INFO">${step} = {u'description': u'Put sale channel type containing 256 character', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.425" starttime="20190820 16:28:17.423"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.427" starttime="20190820 16:28:17.426"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.428" starttime="20190820 16:28:17.422"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.435" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel type containing 256 character', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.436" starttime="20190820 16:28:17.434"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.439" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC26_Sale Channel Type Over Max Length', u'testScript': {u'steps': [{u'description': u'Put sale chann...</msg>
<status status="PASS" endtime="20190820 16:28:17.439" starttime="20190820 16:28:17.437"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.534" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC26_Sale Channel Type Over Max Length", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel type containing 256 character", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.535" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.535" starttime="20190820 16:28:17.440"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.537" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.538" starttime="20190820 16:28:17.536"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.539" starttime="20190820 16:28:17.433"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.539" starttime="20190820 16:28:17.431"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.540" starttime="20190820 16:28:17.430"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.541" starttime="20190820 16:28:17.428"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.541" critical="yes" starttime="20190820 16:28:17.414"></status>
</test>
<test id="s1-s1-s1-s1-t27" name="TC27_Sale Channel Type Not Exist In Database">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.547" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.548" starttime="20190820 16:28:17.546"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.550" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.550" starttime="20190820 16:28:17.549"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.551" starttime="20190820 16:28:17.545"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel type which not exist in database</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.555" level="INFO">${step} = {u'description': u'Put sale channel type which not exist in database', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.556" starttime="20190820 16:28:17.554"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.558" starttime="20190820 16:28:17.557"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.559" starttime="20190820 16:28:17.552"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.564" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel type which not exist in database', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.564" starttime="20190820 16:28:17.563"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.565" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC27_Sale Channel Type Not Exist In Database', u'testScript': {u'steps': [{u'description': u'Put sale...</msg>
<status status="PASS" endtime="20190820 16:28:17.565" starttime="20190820 16:28:17.564"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.660" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC27_Sale Channel Type Not Exist In Database", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel type which not exist in database", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.660" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.661" starttime="20190820 16:28:17.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.663" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.664" starttime="20190820 16:28:17.662"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.664" starttime="20190820 16:28:17.562"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.665" starttime="20190820 16:28:17.562"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.666" starttime="20190820 16:28:17.561"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.667" starttime="20190820 16:28:17.560"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.668" critical="yes" starttime="20190820 16:28:17.543"></status>
</test>
<test id="s1-s1-s1-s1-t28" name="TC28_Sale Channel Seller = null">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.673" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.673" starttime="20190820 16:28:17.672"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.675" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.676" starttime="20190820 16:28:17.674"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.677" starttime="20190820 16:28:17.671"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel seller = null</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.681" level="INFO">${step} = {u'description': u'Put sale channel seller = null', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.681" starttime="20190820 16:28:17.679"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.683" starttime="20190820 16:28:17.682"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.684" starttime="20190820 16:28:17.677"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.692" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel seller = null', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.692" starttime="20190820 16:28:17.690"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.696" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC28_Sale Channel Seller = null', u'testScript': {u'steps': [{u'description': u'Put sale channel sell...</msg>
<status status="PASS" endtime="20190820 16:28:17.697" starttime="20190820 16:28:17.693"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.781" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC28_Sale Channel Seller = null", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel seller = null", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.782" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.782" starttime="20190820 16:28:17.698"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.784" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.784" starttime="20190820 16:28:17.783"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.785" starttime="20190820 16:28:17.689"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.785" starttime="20190820 16:28:17.688"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.786" starttime="20190820 16:28:17.686"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.786" starttime="20190820 16:28:17.684"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.786" critical="yes" starttime="20190820 16:28:17.669"></status>
</test>
<test id="s1-s1-s1-s1-t29" name="TC29_Sale Channel Seller = empty">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.789" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.789" starttime="20190820 16:28:17.789"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.790" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.791" starttime="20190820 16:28:17.790"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.791" starttime="20190820 16:28:17.788"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put request without filling name value</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.793" level="INFO">${step} = {u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.793" starttime="20190820 16:28:17.792"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.795" starttime="20190820 16:28:17.794"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.795" starttime="20190820 16:28:17.792"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.800" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put request without filling name value', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.800" starttime="20190820 16:28:17.799"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.801" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC29_Sale Channel Seller = empty', u'testScript': {u'steps': [{u'description': u'Put request without ...</msg>
<status status="PASS" endtime="20190820 16:28:17.802" starttime="20190820 16:28:17.800"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:17.905" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC29_Sale Channel Seller = empty", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put request without filling name value", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:17.906" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.906" starttime="20190820 16:28:17.802"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.908" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:17.909" starttime="20190820 16:28:17.907"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.910" starttime="20190820 16:28:17.798"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.910" starttime="20190820 16:28:17.797"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.911" starttime="20190820 16:28:17.796"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.912" starttime="20190820 16:28:17.795"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.913" critical="yes" starttime="20190820 16:28:17.787"></status>
</test>
<test id="s1-s1-s1-s1-t30" name="TC30_Sale Channel Seller Inactive">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:17.919" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.919" starttime="20190820 16:28:17.917"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:17.921" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:17.922" starttime="20190820 16:28:17.920"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.922" starttime="20190820 16:28:17.916"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel seller with inactive status</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:17.927" level="INFO">${step} = {u'description': u'Put sale channel seller with inactive status', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:17.927" starttime="20190820 16:28:17.924"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:17.929" starttime="20190820 16:28:17.928"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:17.930" starttime="20190820 16:28:17.923"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:17.939" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel seller with inactive status', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:17.940" starttime="20190820 16:28:17.938"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:17.943" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC30_Sale Channel Seller Inactive', u'testScript': {u'steps': [{u'description': u'Put sale channel se...</msg>
<status status="PASS" endtime="20190820 16:28:17.943" starttime="20190820 16:28:17.940"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:18.048" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC30_Sale Channel Seller Inactive", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel seller with inactive status", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:18.049" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.049" starttime="20190820 16:28:17.945"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.052" starttime="20190820 16:28:18.050"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.053" starttime="20190820 16:28:17.936"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.054" starttime="20190820 16:28:17.934"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.055" starttime="20190820 16:28:17.932"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.056" starttime="20190820 16:28:17.931"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.057" critical="yes" starttime="20190820 16:28:17.914"></status>
</test>
<test id="s1-s1-s1-s1-t31" name="TC31_Sale Channel Seller Not Exist In Database">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:18.062" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.063" starttime="20190820 16:28:18.061"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.066" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.067" starttime="20190820 16:28:18.064"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.068" starttime="20190820 16:28:18.060"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel seller which does not exist</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:18.071" level="INFO">${step} = {u'description': u'Put sale channel seller which does not exist', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:18.072" starttime="20190820 16:28:18.070"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:18.073" starttime="20190820 16:28:18.072"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.073" starttime="20190820 16:28:18.069"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:18.078" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel seller which does not exist', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:18.079" starttime="20190820 16:28:18.077"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:18.081" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC31_Sale Channel Seller Not Exist In Database', u'testScript': {u'steps': [{u'description': u'Put sa...</msg>
<status status="PASS" endtime="20190820 16:28:18.081" starttime="20190820 16:28:18.080"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:18.191" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC31_Sale Channel Seller Not Exist In Database", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel seller which does not exist", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:18.192" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.192" starttime="20190820 16:28:18.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.196" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.196" starttime="20190820 16:28:18.194"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.198" starttime="20190820 16:28:18.076"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.199" starttime="20190820 16:28:18.076"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.201" starttime="20190820 16:28:18.075"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.202" starttime="20190820 16:28:18.074"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.203" critical="yes" starttime="20190820 16:28:18.058"></status>
</test>
<test id="s1-s1-s1-s1-t32" name="TC32_Sale Channel Seller Is String">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:18.211" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.212" starttime="20190820 16:28:18.209"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.215" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.216" starttime="20190820 16:28:18.214"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.218" starttime="20190820 16:28:18.207"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel seller as string value</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:18.222" level="INFO">${step} = {u'description': u'Put sale channel seller as string value', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:18.222" starttime="20190820 16:28:18.221"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:18.223" starttime="20190820 16:28:18.222"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.223" starttime="20190820 16:28:18.219"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:18.229" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel seller as string value', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:18.229" starttime="20190820 16:28:18.228"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:18.231" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC32_Sale Channel Seller Is String', u'testScript': {u'steps': [{u'description': u'Put sale channel s...</msg>
<status status="PASS" endtime="20190820 16:28:18.231" starttime="20190820 16:28:18.230"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:18.568" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC32_Sale Channel Seller Is String", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel seller as string value", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:18.568" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.568" starttime="20190820 16:28:18.232"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.569" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.569" starttime="20190820 16:28:18.569"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.570" starttime="20190820 16:28:18.227"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.570" starttime="20190820 16:28:18.226"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.570" starttime="20190820 16:28:18.225"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.571" starttime="20190820 16:28:18.224"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.571" critical="yes" starttime="20190820 16:28:18.205"></status>
</test>
<test id="s1-s1-s1-s1-t33" name="TC33_Sale Channel Status Is String">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:18.574" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.574" starttime="20190820 16:28:18.573"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.575" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.575" starttime="20190820 16:28:18.574"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.575" starttime="20190820 16:28:18.573"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel status as string value</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:18.577" level="INFO">${step} = {u'description': u'Put sale channel status as string value', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:18.577" starttime="20190820 16:28:18.576"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:18.578" starttime="20190820 16:28:18.578"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.579" starttime="20190820 16:28:18.576"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:18.583" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel status as string value', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:18.583" starttime="20190820 16:28:18.582"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:18.584" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC33_Sale Channel Status Is String', u'testScript': {u'steps': [{u'description': u'Put sale channel s...</msg>
<status status="PASS" endtime="20190820 16:28:18.585" starttime="20190820 16:28:18.583"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:18.679" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC33_Sale Channel Status Is String", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel status as string value", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:18.680" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.681" starttime="20190820 16:28:18.585"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.683" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.684" starttime="20190820 16:28:18.682"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.685" starttime="20190820 16:28:18.581"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.685" starttime="20190820 16:28:18.581"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.686" starttime="20190820 16:28:18.580"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.687" starttime="20190820 16:28:18.579"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.688" critical="yes" starttime="20190820 16:28:18.572"></status>
</test>
<test id="s1-s1-s1-s1-t34" name="TC34_Sale Channel Status Is Active">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:18.693" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.693" starttime="20190820 16:28:18.692"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.695" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.696" starttime="20190820 16:28:18.694"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.696" starttime="20190820 16:28:18.690"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel status as Active</arg>
<arg>The sale channel is added successfully</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:18.700" level="INFO">${step} = {u'description': u'Put sale channel status as Active', u'expectedResult': u'The sale channel is added successfully'}</msg>
<status status="PASS" endtime="20190820 16:28:18.700" starttime="20190820 16:28:18.698"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:18.702" starttime="20190820 16:28:18.701"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.703" starttime="20190820 16:28:18.697"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:18.711" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel status as Active', u'expectedResult': u'The sale channel is added successfully'}]}</msg>
<status status="PASS" endtime="20190820 16:28:18.711" starttime="20190820 16:28:18.709"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:18.714" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC34_Sale Channel Status Is Active', u'testScript': {u'steps': [{u'description': u'Put sale channel s...</msg>
<status status="PASS" endtime="20190820 16:28:18.715" starttime="20190820 16:28:18.712"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:18.805" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC34_Sale Channel Status Is Active", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel status as Active", "expectedResult": "The sale channel is added successfully"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:18.807" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.807" starttime="20190820 16:28:18.716"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.811" starttime="20190820 16:28:18.808"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.812" starttime="20190820 16:28:18.708"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.813" starttime="20190820 16:28:18.707"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.814" starttime="20190820 16:28:18.705"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.815" starttime="20190820 16:28:18.704"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.816" critical="yes" starttime="20190820 16:28:18.689"></status>
</test>
<test id="s1-s1-s1-s1-t35" name="TC35_Sale Channel Status Is Inactive">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:18.822" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.822" starttime="20190820 16:28:18.821"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.824" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.825" starttime="20190820 16:28:18.823"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.825" starttime="20190820 16:28:18.820"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel status as Inactive</arg>
<arg>The sale channel is added successfully</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:18.829" level="INFO">${step} = {u'description': u'Put sale channel status as Inactive', u'expectedResult': u'The sale channel is added successfully'}</msg>
<status status="PASS" endtime="20190820 16:28:18.829" starttime="20190820 16:28:18.827"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:18.831" starttime="20190820 16:28:18.830"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.832" starttime="20190820 16:28:18.826"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:18.839" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel status as Inactive', u'expectedResult': u'The sale channel is added successfully'}]}</msg>
<status status="PASS" endtime="20190820 16:28:18.840" starttime="20190820 16:28:18.838"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:18.843" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC35_Sale Channel Status Is Inactive', u'testScript': {u'steps': [{u'description': u'Put sale channel...</msg>
<status status="PASS" endtime="20190820 16:28:18.843" starttime="20190820 16:28:18.841"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:18.955" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC35_Sale Channel Status Is Inactive", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel status as Inactive", "expectedResult": "The sale channel is added successfully"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:18.956" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.956" starttime="20190820 16:28:18.844"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.960" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:18.960" starttime="20190820 16:28:18.958"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.961" starttime="20190820 16:28:18.836"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.962" starttime="20190820 16:28:18.835"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.963" starttime="20190820 16:28:18.834"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.964" starttime="20190820 16:28:18.833"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.965" critical="yes" starttime="20190820 16:28:18.818"></status>
</test>
<test id="s1-s1-s1-s1-t36" name="TC36_Sale Channel Status Not Exist">
<kw type="setup" name="Init Test Step List" library="Utils">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${TEST_STEP_LIST}</var>
</assign>
<msg timestamp="20190820 16:28:18.972" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.972" starttime="20190820 16:28:18.971"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
</arguments>
<msg timestamp="20190820 16:28:18.976" level="INFO">${TEST_STEP_LIST} = []</msg>
<status status="PASS" endtime="20190820 16:28:18.977" starttime="20190820 16:28:18.974"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.978" starttime="20190820 16:28:18.969"></status>
</kw>
<kw name="Add Test Step" library="Utils">
<arguments>
<arg>Put sale channel status not 0 nor 1</arg>
<arg>The sale channel is failed to add</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>description=${stepDescription}</arg>
<arg>expectedResult=${stepExpect}</arg>
</arguments>
<assign>
<var>${step}</var>
</assign>
<msg timestamp="20190820 16:28:18.983" level="INFO">${step} = {u'description': u'Put sale channel status not 0 nor 1', u'expectedResult': u'The sale channel is failed to add'}</msg>
<status status="PASS" endtime="20190820 16:28:18.984" starttime="20190820 16:28:18.981"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${step}</arg>
</arguments>
<status status="PASS" endtime="20190820 16:28:18.987" starttime="20190820 16:28:18.985"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:18.988" starttime="20190820 16:28:18.979"></status>
</kw>
<kw name="Complete Test Case" library="Utils">
<arguments>
<arg>${FOLDER_ADD_SALE_CHANNEL}</arg>
<arg>${ISSUE_KEY}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${issueLinks}"!="${null}"</arg>
<arg>Add Test Case To Folder And Ticket</arg>
<arg>${folder}</arg>
<arg>${issueLinks}</arg>
<arg>ELSE</arg>
<arg>Add Test Case To Folder</arg>
<arg>${folder}</arg>
</arguments>
<kw name="Add Test Case To Folder" library="Utils">
<arguments>
<arg>${folder}</arg>
</arguments>
<kw name="Create Test Case" library="Utils">
<arguments>
<arg>${TEST_STEP_LIST}</arg>
<arg>${folder}</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>type=STEP_BY_STEP</arg>
<arg>steps=${testSteps}</arg>
</arguments>
<assign>
<var>${testScript}</var>
</assign>
<msg timestamp="20190820 16:28:19.000" level="INFO">${testScript} = {u'type': u'STEP_BY_STEP', u'steps': [{u'description': u'Put sale channel status not 0 nor 1', u'expectedResult': u'The sale channel is failed to add'}]}</msg>
<status status="PASS" endtime="20190820 16:28:19.000" starttime="20190820 16:28:18.996"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>projectKey=${JIRA_PROJECT_KEY}</arg>
<arg>folder=${folder}</arg>
<arg>status=Approved</arg>
<arg>name=${testcaseName}</arg>
<arg>testScript=${testScript}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20190820 16:28:19.003" level="INFO">${body} = {u'projectKey': u'SC', u'folder': u'/API Test/Add Sale Chanel', u'status': u'Approved', u'name': u'TC36_Sale Channel Status Not Exist', u'testScript': {u'steps': [{u'description': u'Put sale channel s...</msg>
<status status="PASS" endtime="20190820 16:28:19.003" starttime="20190820 16:28:19.001"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Jira_Request</arg>
<arg>${URI_CREATE_TESTCASE}</arg>
<arg>data=${body}</arg>
<arg>headers=${JIRA_HEADER}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190820 16:28:19.100" level="INFO">Post Request using : alias=Get_Jira_Request, uri=/rest/atm/1.0/testcase, data={"projectKey": "SC", "folder": "/API Test/Add Sale Chanel", "status": "Approved", "name": "TC36_Sale Channel Status Not Exist", "testScript": {"type": "STEP_BY_STEP", "steps": [{"description": "Put sale channel status not 0 nor 1", "expectedResult": "The sale channel is failed to add"}]}}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190820 16:28:19.101" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" endtime="20190820 16:28:19.102" starttime="20190820 16:28:19.004"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>${POST_SUCCESS_CODE}</arg>
</arguments>
<msg timestamp="20190820 16:28:19.106" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 16:28:19.107" starttime="20190820 16:28:19.103"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:19.108" starttime="20190820 16:28:18.994"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:19.109" starttime="20190820 16:28:18.992"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:19.110" starttime="20190820 16:28:18.990"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:19.111" starttime="20190820 16:28:18.989"></status>
</kw>
<status status="PASS" endtime="20190820 16:28:19.112" critical="yes" starttime="20190820 16:28:18.967"></status>
</test>
<doc>Test Seller Center REST API
Add test cases for Add New Product</doc>
<status status="PASS" endtime="20190820 16:28:19.118" starttime="20190820 16:28:11.165"></status>
</suite>
<status status="PASS" endtime="20190820 16:28:19.132" starttime="20190820 16:28:11.162"></status>
</suite>
<status status="PASS" endtime="20190820 16:28:19.146" starttime="20190820 16:28:11.160"></status>
</suite>
<status status="PASS" endtime="20190820 16:28:19.159" starttime="20190820 16:28:11.140"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="36">Critical Tests</stat>
<stat fail="0" pass="36">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="RobotFrameworkSellCenterAPITest" pass="36">RobotFrameworkSellCenterAPITest</stat>
<stat fail="0" id="s1-s1" name="Test Specification" pass="36">RobotFrameworkSellCenterAPITest.Test Specification</stat>
<stat fail="0" id="s1-s1-s1" name="Products" pass="36">RobotFrameworkSellCenterAPITest.Test Specification.Products</stat>
<stat fail="0" id="s1-s1-s1-s1" name="Spec AddProduct" pass="36">RobotFrameworkSellCenterAPITest.Test Specification.Products.Spec AddProduct</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
